{
  "components": {
    "schemas": {
      "account": {
        "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
        "properties": {
          "business_profile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_business_profile"
              }
            ],
            "description": "Business information about the account.",
            "nullable": true
          },
          "business_type": {
            "description": "The business type.",
            "enum": [
              "company",
              "government_entity",
              "individual",
              "non_profit"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "capabilities": {
            "$ref": "#/components/schemas/account_capabilities"
          },
          "charges_enabled": {
            "description": "Whether the account can create live charges.",
            "type": "boolean"
          },
          "company": {
            "$ref": "#/components/schemas/legal_entity_company"
          },
          "controller": {
            "$ref": "#/components/schemas/account_unification_account_controller"
          },
          "country": {
            "description": "The account's country.",
            "maxLength": 5000,
            "type": "string"
          },
          "created": {
            "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_currency": {
            "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
            "maxLength": 5000,
            "type": "string"
          },
          "details_submitted": {
            "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
            "type": "boolean"
          },
          "email": {
            "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "external_accounts": {
            "description": "External accounts (bank accounts and debit cards) currently attached to this account",
            "properties": {
              "data": {
                "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "$ref": "#/components/schemas/card"
                    }
                  ],
                  "title": "Polymorphic",
                  "x-stripeBypassValidation": true
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "ExternalAccountList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "future_requirements": {
            "$ref": "#/components/schemas/account_future_requirements"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/person"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account"
            ],
            "type": "string"
          },
          "payouts_enabled": {
            "description": "Whether Stripe can send payouts to this account.",
            "type": "boolean"
          },
          "requirements": {
            "$ref": "#/components/schemas/account_requirements"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_settings"
              }
            ],
            "description": "Options for customizing how the account functions within Stripe.",
            "nullable": true
          },
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_tos_acceptance"
          },
          "type": {
            "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
            "enum": [
              "custom",
              "express",
              "standard"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object"
        ],
        "title": "Account",
        "type": "object",
        "x-expandableFields": [
          "business_profile",
          "capabilities",
          "company",
          "controller",
          "external_accounts",
          "future_requirements",
          "individual",
          "requirements",
          "settings",
          "tos_acceptance"
        ],
        "x-resourceId": "account"
      },
      "account_settings": {
        "description": "",
        "properties": {
          "bacs_debit_payments": {
            "$ref": "#/components/schemas/account_bacs_debit_payments_settings"
          },
          "branding": {
            "$ref": "#/components/schemas/account_branding_settings"
          },
          "card_issuing": {
            "$ref": "#/components/schemas/account_card_issuing_settings"
          },
          "card_payments": {
            "$ref": "#/components/schemas/account_card_payments_settings"
          },
          "dashboard": {
            "$ref": "#/components/schemas/account_dashboard_settings"
          },
          "payments": {
            "$ref": "#/components/schemas/account_payments_settings"
          },
          "payouts": {
            "$ref": "#/components/schemas/account_payout_settings"
          },
          "sepa_debit_payments": {
            "$ref": "#/components/schemas/account_sepa_debit_payments_settings"
          },
          "treasury": {
            "$ref": "#/components/schemas/account_treasury_settings"
          }
        },
        "required": [
          "branding",
          "card_payments",
          "dashboard",
          "payments"
        ],
        "title": "AccountSettings",
        "type": "object",
        "x-expandableFields": [
          "bacs_debit_payments",
          "branding",
          "card_issuing",
          "card_payments",
          "dashboard",
          "payments",
          "payouts",
          "sepa_debit_payments",
          "treasury"
        ]
      },
      "account_bacs_debit_payments_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The Bacs Direct Debit Display Name for this account. For payments made with Bacs Direct Debit, this will appear on the mandate, and as the statement descriptor.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountBacsDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_branding_settings": {
        "description": "",
        "properties": {
          "icon": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "logo": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "primary_color": {
            "description": "A CSS hex color value representing the primary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "secondary_color": {
            "description": "A CSS hex color value representing the secondary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountBrandingSettings",
        "type": "object",
        "x-expandableFields": [
          "icon",
          "logo"
        ]
      },
      "account_payments_settings": {
        "description": "",
        "properties": {
          "statement_descriptor": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountPaymentsSettings",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_payout_settings": {
        "description": "",
        "properties": {
          "debit_negative_balances": {
            "description": "A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances) documentation for details. Default value is `false` for Custom accounts, otherwise `true`.",
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/transfer_schedule"
          },
          "statement_descriptor": {
            "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "debit_negative_balances",
          "schedule"
        ],
        "title": "AccountPayoutSettings",
        "type": "object",
        "x-expandableFields": [
          "schedule"
        ]
      },
      "account_tos_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted their service agreement",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_agreement": {
            "description": "The user's service agreement type",
            "maxLength": 5000,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountTOSAcceptance",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_terms_of_service": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountTermsOfService",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "api_errors": {
        "description": "",
        "properties": {
          "charge": {
            "description": "For card errors, the ID of the failed charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "code": {
            "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "decline_code": {
            "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
            "maxLength": 5000,
            "type": "string"
          },
          "doc_url": {
            "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
            "maxLength": 40000,
            "type": "string"
          },
          "param": {
            "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
            "maxLength": 5000,
            "type": "string"
          },
          "payment_intent": {
            "$ref": "#/components/schemas/payment_intent"
          },
          "payment_method": {
            "$ref": "#/components/schemas/payment_method"
          },
          "payment_method_type": {
            "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
            "maxLength": 5000,
            "type": "string"
          },
          "request_log_url": {
            "description": "A URL to the request log entry in your dashboard.",
            "maxLength": 5000,
            "type": "string"
          },
          "setup_intent": {
            "$ref": "#/components/schemas/setup_intent"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {
                "$ref": "#/components/schemas/card"
              },
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "The source object for errors returned on a request involving a source."
          },
          "type": {
            "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
            "enum": [
              "api_error",
              "card_error",
              "idempotency_error",
              "invalid_request_error"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "APIErrors",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "payment_method",
          "setup_intent",
          "source"
        ]
      },
      "setup_intent": {
        "anyOf": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/setup_intent"
          }
        ],
        "description": "The ID of the SetupIntent for Checkout Sessions in `setup` mode.",
        "nullable": true,
        "x-expansionResources": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/setup_intent"
            }
          ]
        }
      },
      "payment_intent": {
        "anyOf": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/payment_intent"
          }
        ],
        "description": "ID of the PaymentIntent associated with this charge, if one exists.",
        "nullable": true,
        "x-expansionResources": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/payment_intent"
            }
          ]
        }
      },
      "customer": {
        "anyOf": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/customer"
          },
          {
            "$ref": "#/components/schemas/deleted_customer"
          }
        ],
        "description": "The ID of the customer that the bank account is associated with.",
        "nullable": true,
        "x-expansionResources": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/customer"
            },
            {
              "$ref": "#/components/schemas/deleted_customer"
            }
          ]
        }
      },
      "deleted_customer": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedCustomer",
        "type": "object",
        "x-expandableFields": [

        ],
        "x-resourceId": "deleted_customer"
      },
      "error": {
        "description": "An error response from the Stripe API",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/api_errors"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "payment_method": {
        "anyOf": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/payment_method"
          }
        ],
        "description": "ID of the payment method used in this PaymentIntent.",
        "nullable": true,
        "x-expansionResources": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/payment_method"
            }
          ]
        }
      },
      "bank_account": {
        "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The ID of the account that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_holder_type": {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "available_payout_methods": {
            "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
            "items": {
              "enum": [
                "instant",
                "standard"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "bank_name": {
            "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_for_currency": {
            "description": "Whether this bank account is the default external account for its currency.",
            "nullable": true,
            "type": "boolean"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the bank account number.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "bank_account"
            ],
            "type": "string"
          },
          "routing_number": {
            "description": "The routing transit number for the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "country",
          "currency",
          "id",
          "last4",
          "object",
          "status"
        ],
        "title": "BankAccount",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer"
        ],
        "x-resourceId": "bank_account"
      },
      "account_business_profile": {
        "description": "",
        "properties": {
          "mcc": {
            "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The customer-facing business name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
            "maxLength": 40000,
            "nullable": true,
            "type": "string"
          },
          "support_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "A publicly available mailing address for sending support issues to.",
            "nullable": true
          },
          "support_email": {
            "description": "A publicly available email address for sending support issues to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_phone": {
            "description": "A publicly available phone number to call with support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_url": {
            "description": "A publicly available website for handling support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The business's publicly available website.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountBusinessProfile",
        "type": "object",
        "x-expandableFields": [
          "support_address"
        ]
      },
      "account_capabilities": {
        "description": "",
        "properties": {
          "acss_debit_payments": {
            "description": "The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "affirm_payments": {
            "description": "The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "afterpay_clearpay_payments": {
            "description": "The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "au_becs_debit_payments": {
            "description": "The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bacs_debit_payments": {
            "description": "The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bancontact_payments": {
            "description": "The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bank_transfer_payments": {
            "description": "The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "blik_payments": {
            "description": "The status of the blik payments capability of the account, or whether the account can directly process blik charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "boleto_payments": {
            "description": "The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_issuing": {
            "description": "The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_payments": {
            "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "cartes_bancaires_payments": {
            "description": "The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "eps_payments": {
            "description": "The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "fpx_payments": {
            "description": "The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "giropay_payments": {
            "description": "The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "grabpay_payments": {
            "description": "The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "ideal_payments": {
            "description": "The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "india_international_payments": {
            "description": "The status of the india_international_payments capability of the account, or whether the account can process international charges (non INR) in India.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "jcb_payments": {
            "description": "The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "klarna_payments": {
            "description": "The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "konbini_payments": {
            "description": "The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "legacy_payments": {
            "description": "The status of the legacy payments capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "link_payments": {
            "description": "The status of the link_payments capability of the account, or whether the account can directly process Link charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "oxxo_payments": {
            "description": "The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "p24_payments": {
            "description": "The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "paynow_payments": {
            "description": "The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "promptpay_payments": {
            "description": "The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sepa_debit_payments": {
            "description": "The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sofort_payments": {
            "description": "The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_k": {
            "description": "The status of the tax reporting 1099-K (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_misc": {
            "description": "The status of the tax reporting 1099-MISC (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "transfers": {
            "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "treasury": {
            "description": "The status of the banking capability, or whether the account can have bank accounts.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "us_bank_account_ach_payments": {
            "description": "The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          }
        },
        "title": "AccountCapabilities",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "legal_entity_company": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kana variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kanji variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "directors_provided": {
            "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).",
            "type": "boolean"
          },
          "executives_provided": {
            "description": "Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.",
            "type": "boolean"
          },
          "name": {
            "description": "The company's legal name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kana": {
            "description": "The Kana variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kanji": {
            "description": "The Kanji variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "owners_provided": {
            "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
            "type": "boolean"
          },
          "ownership_declaration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_ubo_declaration"
              }
            ],
            "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
            "nullable": true
          },
          "phone": {
            "description": "The company's phone number (used for verification).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "structure": {
            "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
            "enum": [
              "free_zone_establishment",
              "free_zone_llc",
              "government_instrumentality",
              "governmental_unit",
              "incorporated_non_profit",
              "limited_liability_partnership",
              "llc",
              "multi_member_llc",
              "private_company",
              "private_corporation",
              "private_partnership",
              "public_company",
              "public_corporation",
              "public_partnership",
              "single_member_llc",
              "sole_establishment",
              "sole_proprietorship",
              "tax_exempt_government_instrumentality",
              "unincorporated_association",
              "unincorporated_non_profit"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "tax_id_provided": {
            "description": "Whether the company's business ID number was provided.",
            "type": "boolean"
          },
          "tax_id_registrar": {
            "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
            "maxLength": 5000,
            "type": "string"
          },
          "vat_id_provided": {
            "description": "Whether the company's business VAT number was provided.",
            "type": "boolean"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_company_verification"
              }
            ],
            "description": "Information on the verification state of the company.",
            "nullable": true
          }
        },
        "title": "LegalEntityCompany",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "ownership_declaration",
          "verification"
        ]
      },
      "legal_entity_person_verification": {
        "description": "",
        "properties": {
          "additional_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_person_verification_document"
              }
            ],
            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
            "nullable": true
          },
          "details": {
            "description": "A user-displayable string describing the verification state for the person. For example, this may say \"Provided identity information could not be verified\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/legal_entity_person_verification_document"
          },
          "status": {
            "description": "The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "LegalEntityPersonVerification",
        "type": "object",
        "x-expandableFields": [
          "additional_document",
          "document"
        ]
      },
      "legal_entity_person_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say \"Identity document is too unclear to read\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "LegalEntityPersonVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ]
      },
      "legal_entity_company_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "LegalEntityCompanyVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ]
      },
      "account_unification_account_controller": {
        "description": "",
        "properties": {
          "is_controller": {
            "description": "`true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.",
            "type": "boolean"
          },
          "type": {
            "description": "The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.",
            "enum": [
              "account",
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "AccountUnificationAccountController",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is empty because fields in `future_requirements` will never disable the account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "account_card_issuing_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/card_issuing_account_terms_of_service"
          }
        },
        "title": "AccountCardIssuingSettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ]
      },
      "account_card_payments_settings": {
        "description": "",
        "properties": {
          "decline_on": {
            "$ref": "#/components/schemas/account_decline_charge_on"
          },
          "statement_descriptor_prefix": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountCardPaymentsSettings",
        "type": "object",
        "x-expandableFields": [
          "decline_on"
        ]
      },
      "account_dashboard_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountDashboardSettings",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_decline_charge_on": {
        "description": "",
        "properties": {
          "avs_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
            "type": "boolean"
          },
          "cvc_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
            "type": "boolean"
          }
        },
        "required": [
          "avs_failure",
          "cvc_failure"
        ],
        "title": "AccountDeclineChargeOn",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "person": {
        "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a Standard or Express account's persons after the account starts onboarding, such as after generating an account link for the account.\nSee the [Standard onboarding](https://stripe.com/docs/connect/standard-accounts) or [Express onboarding documentation](https://stripe.com/docs/connect/express-accounts) for information about platform pre-filling and account onboarding steps.\n\nRelated guide: [Handling Identity Verification with the API](https://stripe.com/docs/connect/identity-verification-api#person-information).",
        "properties": {
          "account": {
            "description": "The account the person is associated with.",
            "maxLength": 5000,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "dob": {
            "$ref": "#/components/schemas/legal_entity_dob"
          },
          "email": {
            "description": "The person's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "The person's first name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kana": {
            "description": "The Kana variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kanji": {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "full_name_aliases": {
            "description": "A list of alternate names or aliases that the person is known by.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "future_requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_future_requirements"
              }
            ],
            "nullable": true
          },
          "gender": {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_number_provided": {
            "description": "Whether the person's `id_number` was provided.",
            "type": "boolean"
          },
          "id_number_secondary_provided": {
            "description": "Whether the person's `id_number_secondary` was provided.",
            "type": "boolean"
          },
          "last_name": {
            "description": "The person's last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kana": {
            "description": "The Kana variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kanji": {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "maiden_name": {
            "description": "The person's maiden name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "nationality": {
            "description": "The country where the person is a national.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The person's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "political_exposure": {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "enum": [
              "existing",
              "none"
            ],
            "type": "string"
          },
          "registered_address": {
            "$ref": "#/components/schemas/address"
          },
          "relationship": {
            "$ref": "#/components/schemas/person_relationship"
          },
          "requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_requirements"
              }
            ],
            "nullable": true
          },
          "ssn_last_4_provided": {
            "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/legal_entity_person_verification"
          }
        },
        "required": [
          "account",
          "created",
          "id",
          "object"
        ],
        "title": "Person",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "dob",
          "future_requirements",
          "registered_address",
          "relationship",
          "requirements",
          "verification"
        ],
        "x-resourceId": "person"
      },
      "person_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "person_relationship": {
        "description": "",
        "properties": {
          "director": {
            "description": "Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
            "nullable": true,
            "type": "boolean"
          },
          "executive": {
            "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
            "nullable": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Whether the person is an owner of the account’s legal entity.",
            "nullable": true,
            "type": "boolean"
          },
          "percent_ownership": {
            "description": "The percent owned by the person of the account's legal entity.",
            "nullable": true,
            "type": "number"
          },
          "representative": {
            "description": "Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.",
            "nullable": true,
            "type": "boolean"
          },
          "title": {
            "description": "The person's title (e.g., CEO, Support Engineer).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PersonRelationship",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "person_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Address",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "legal_entity_japan_address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City/Ward.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Block/Building number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Building details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Prefecture.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "town": {
            "description": "Town/cho-me.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "LegalEntityJapanAddress",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "legal_entity_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "LegalEntityDOB",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "legal_entity_ubo_declaration": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user-agent string from the browser where the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "LegalEntityUBODeclaration",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "legal_entity_company_verification": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/legal_entity_company_verification_document"
          }
        },
        "required": [
          "document"
        ],
        "title": "LegalEntityCompanyVerification",
        "type": "object",
        "x-expandableFields": [
          "document"
        ]
      },
      "account_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the account is disabled, this string describes why. Can be `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.listed`, `rejected.terms_of_service`, `rejected.other`, `under_review`, or `other`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "account_requirements_alternative": {
        "description": "",
        "properties": {
          "alternative_fields_due": {
            "description": "Fields that can be provided to satisfy all fields in `original_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "original_fields_due": {
            "description": "Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternative_fields_due",
          "original_fields_due"
        ],
        "title": "AccountRequirementsAlternative",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_requirements_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "The code for the type of error.",
            "enum": [
              "invalid_address_city_state_postal_code",
              "invalid_dob_age_under_18",
              "invalid_representative_country",
              "invalid_street_address",
              "invalid_tos_acceptance",
              "invalid_value_other",
              "verification_document_address_mismatch",
              "verification_document_address_missing",
              "verification_document_corrupt",
              "verification_document_country_not_supported",
              "verification_document_dob_mismatch",
              "verification_document_duplicate_type",
              "verification_document_expired",
              "verification_document_failed_copy",
              "verification_document_failed_greyscale",
              "verification_document_failed_other",
              "verification_document_failed_test_mode",
              "verification_document_fraudulent",
              "verification_document_id_number_mismatch",
              "verification_document_id_number_missing",
              "verification_document_incomplete",
              "verification_document_invalid",
              "verification_document_issue_or_expiry_date_missing",
              "verification_document_manipulated",
              "verification_document_missing_back",
              "verification_document_missing_front",
              "verification_document_name_mismatch",
              "verification_document_name_missing",
              "verification_document_nationality_mismatch",
              "verification_document_not_readable",
              "verification_document_not_signed",
              "verification_document_not_uploaded",
              "verification_document_photo_mismatch",
              "verification_document_too_large",
              "verification_document_type_not_supported",
              "verification_failed_address_match",
              "verification_failed_business_iec_number",
              "verification_failed_document_match",
              "verification_failed_id_number_match",
              "verification_failed_keyed_identity",
              "verification_failed_keyed_match",
              "verification_failed_name_match",
              "verification_failed_other",
              "verification_failed_residential_address",
              "verification_failed_tax_id_match",
              "verification_failed_tax_id_not_issued",
              "verification_missing_executives",
              "verification_missing_owners",
              "verification_requires_additional_memorandum_of_associations"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "reason": {
            "description": "An informative message that indicates the error type and provides additional details about the error.",
            "maxLength": 5000,
            "type": "string"
          },
          "requirement": {
            "description": "The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason",
          "requirement"
        ],
        "title": "AccountRequirementsError",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_sepa_debit_payments_settings": {
        "description": "",
        "properties": {
          "creditor_id": {
            "description": "SEPA creditor identifier that identifies the company making the payment.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountSepaDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "transfer_schedule": {
        "description": "",
        "properties": {
          "delay_days": {
            "description": "The number of days charges for the account will be held before being paid out.",
            "type": "integer"
          },
          "interval": {
            "description": "How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.",
            "maxLength": 5000,
            "type": "string"
          },
          "monthly_anchor": {
            "description": "The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
            "type": "integer"
          },
          "weekly_anchor": {
            "description": "The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "delay_days",
          "interval"
        ],
        "title": "TransferSchedule",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "account_treasury_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_terms_of_service"
          }
        },
        "title": "AccountTreasurySettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ]
      },
      "card": {
        "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "address_city": {
            "description": "City/District/Suburb/Town/Village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_country": {
            "description": "Billing address country, if provided when creating card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line1": {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line1_check": {
            "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line2": {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_state": {
            "description": "State/County/Province/Region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_zip": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "available_payout_methods": {
            "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
            "items": {
              "enum": [
                "instant",
                "standard"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "brand": {
            "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "default_for_currency": {
            "description": "Whether this card is the default external account for its currency.",
            "nullable": true,
            "type": "boolean"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Cardholder name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "card"
            ],
            "type": "string"
          },
          "status": {
            "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tokenization_method": {
            "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "brand",
          "exp_month",
          "exp_year",
          "funding",
          "id",
          "last4",
          "object"
        ],
        "title": "Card",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer"
        ],
        "x-resourceId": "card"
      },
      "card_issuing_account_terms_of_service": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "CardIssuingAccountTermsOfService",
        "type": "object",
        "x-expandableFields": [

        ]
      },
      "source": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/bank_account"
          },
          {
            "$ref": "#/components/schemas/card"
          },
          {
            "$ref": "#/components/schemas/source"
          }
        ],
        "description": "The source object for errors returned on a request involving a source."
      },
      "file": {
        "description": "This is an object representing a file hosted on Stripe's servers. The\nfile may have been uploaded by yourself using the [create file](https://stripe.com/docs/api#create_file)\nrequest (for example, when uploading dispute evidence) or it may have\nbeen created by Stripe (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File Upload Guide](https://stripe.com/docs/file-upload).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The time at which the file expires and is no longer available in epoch seconds.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "filename": {
            "description": "A filename for the file, suitable for saving to a filesystem.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "links": {
            "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
            "nullable": true,
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/file_link"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/file_links",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "FileFileLinkList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file"
            ],
            "type": "string"
          },
          "purpose": {
            "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
            "enum": [
              "account_requirement",
              "additional_verification",
              "business_icon",
              "business_logo",
              "customer_signature",
              "dispute_evidence",
              "document_provider_identity_document",
              "finance_report_run",
              "identity_document",
              "identity_document_downloadable",
              "pci_document",
              "selfie",
              "sigma_scheduled_query",
              "tax_document_user_upload",
              "terminal_reader_splashscreen"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "size": {
            "description": "The size in bytes of the file object.",
            "type": "integer"
          },
          "title": {
            "description": "A user friendly title for the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL from which the file can be downloaded using your live secret API key.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "id",
          "object",
          "purpose",
          "size"
        ],
        "title": "File",
        "type": "object",
        "x-expandableFields": [
          "links"
        ],
        "x-resourceId": "file"
      },
      "file_link": {
        "description": "To share the contents of a `File` object with non-Stripe users, you can\ncreate a `FileLink`. `FileLink`s contain a URL that can be used to\nretrieve the contents of the file without authentication.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expired": {
            "description": "Whether this link is already expired.",
            "type": "boolean"
          },
          "expires_at": {
            "description": "Time at which the link expires.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The file object this link points to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The publicly accessible URL to download the file.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expired",
          "file",
          "id",
          "livemode",
          "metadata",
          "object"
        ],
        "title": "FileLink",
        "type": "object",
        "x-expandableFields": [
          "file"
        ],
        "x-resourceId": "file_link"
      }
    }
  },
  "info": {
    "contact": {
      "email": "",
      "name": "Kosha Dev Team",
      "url": "https://stripe.com"
    },
    "description": "The Kosha Stripe Connector REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "",
    "title": "Kosha Stripe Connector API Spec",
    "version": "2022-11-15",
    "x-stripeSpecFilename": "spec3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/v1/payment_intents": {
      "get": {
        "description": "<p>Returns a list of PaymentIntents.</p>",
        "operationId": "GetPaymentIntents",
        "parameters": [
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Only return PaymentIntents for the customer specified by this customer ID.",
            "in": "query",
            "name": "customer",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/payment_intent"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/payment_intents",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "PaymentFlowsPaymentIntentList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Creates a PaymentIntent object.</p>\n\n<p>After the PaymentIntent is created, attach a payment method and <a href=\"/docs/api/payment_intents/confirm\">confirm</a>\nto continue the payment. You can read more about the different payment flows\navailable via the Payment Intents API <a href=\"/docs/payments/payment-intents\">here</a>.</p>\n\n<p>When <code>confirm=true</code> is used during creation, it is equivalent to creating\nand confirming the PaymentIntent in the same call. You may use any parameters\navailable in the <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> when <code>confirm=true</code>\nis supplied.</p>",
        "operationId": "PostPaymentIntents",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "automatic_payment_methods": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "mandate_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "off_session": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_types": {
                  "explode": true,
                  "style": "deepObject"
                },
                "radar_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "shipping": {
                  "explode": true,
                  "style": "deepObject"
                },
                "transfer_data": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "amount": {
                    "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
                    "type": "integer"
                  },
                  "application_fee_amount": {
                    "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
                    "type": "integer"
                  },
                  "automatic_payment_methods": {
                    "description": "When enabled, this PaymentIntent will accept payment methods that you have enabled in the Dashboard and are compatible with this PaymentIntent's other parameters.",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ],
                    "title": "automatic_payment_methods_param",
                    "type": "object"
                  },
                  "capture_method": {
                    "description": "Controls when the funds will be captured from the customer's account.",
                    "enum": [
                      "automatic",
                      "manual"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "confirm": {
                    "description": "Set to `true` to attempt to [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, parameters available in the [confirm](https://stripe.com/docs/api/payment_intents/confirm) API may also be provided.",
                    "type": "boolean"
                  },
                  "confirmation_method": {
                    "enum": [
                      "automatic",
                      "manual"
                    ],
                    "type": "string"
                  },
                  "currency": {
                    "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "type": "string"
                  },
                  "customer": {
                    "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "error_on_requires_action": {
                    "description": "Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
                    "type": "boolean"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mandate": {
                    "description": "ID of the mandate to be used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "mandate_data": {
                    "description": "This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
                    "properties": {
                      "customer_acceptance": {
                        "properties": {
                          "accepted_at": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "offline": {
                            "properties": {
                            },
                            "title": "offline_param",
                            "type": "object"
                          },
                          "online": {
                            "properties": {
                              "ip_address": {
                                "type": "string"
                              },
                              "user_agent": {
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "required": [
                              "ip_address",
                              "user_agent"
                            ],
                            "title": "online_param",
                            "type": "object"
                          },
                          "type": {
                            "enum": [
                              "offline",
                              "online"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "customer_acceptance_param",
                        "type": "object"
                      }
                    },
                    "required": [
                      "customer_acceptance"
                    ],
                    "title": "secret_key_param",
                    "type": "object"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  },
                  "off_session": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "enum": [
                          "one_off",
                          "recurring"
                        ],
                        "maxLength": 5000,
                        "type": "string"
                      }
                    ],
                    "description": "Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm)."
                  },
                  "on_behalf_of": {
                    "description": "The Stripe account ID for which these funds are intended. For details, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.\n\nIf this parameter is omitted with `confirm=true`, `customer.default_source` will be attached as this PaymentIntent's payment instrument to improve the migration experience for users of the Charges API. We recommend that you explicitly provide the `payment_method` going forward.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "payment_method_data": {
                    "description": "If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\nin the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\nproperty on the PaymentIntent.",
                    "properties": {
                      "acss_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "institution_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "transit_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "institution_number",
                          "transit_number"
                        ],
                        "title": "payment_method_param",
                        "type": "object"
                      },
                      "affirm": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "afterpay_clearpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "alipay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "au_becs_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "bsb_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "bsb_number"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "bacs_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "sort_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "bancontact": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "billing_details": {
                        "properties": {
                          "address": {
                            "anyOf": [
                              {
                                "properties": {
                                  "city": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "country": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "line1": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "line2": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "postal_code": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "state": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "title": "billing_details_address",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "email": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "billing_details_inner_params",
                        "type": "object"
                      },
                      "blik": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "boleto": {
                        "properties": {
                          "tax_id": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "tax_id"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "customer_balance": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "eps": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "arzte_und_apotheker_bank",
                              "austrian_anadi_bank_ag",
                              "bank_austria",
                              "bankhaus_carl_spangler",
                              "bankhaus_schelhammer_und_schattera_ag",
                              "bawag_psk_ag",
                              "bks_bank_ag",
                              "brull_kallmus_bank_ag",
                              "btv_vier_lander_bank",
                              "capital_bank_grawe_gruppe_ag",
                              "deutsche_bank_ag",
                              "dolomitenbank",
                              "easybank_ag",
                              "erste_bank_und_sparkassen",
                              "hypo_alpeadriabank_international_ag",
                              "hypo_bank_burgenland_aktiengesellschaft",
                              "hypo_noe_lb_fur_niederosterreich_u_wien",
                              "hypo_oberosterreich_salzburg_steiermark",
                              "hypo_tirol_bank_ag",
                              "hypo_vorarlberg_bank_ag",
                              "marchfelder_bank",
                              "oberbank_ag",
                              "raiffeisen_bankengruppe_osterreich",
                              "schoellerbank_ag",
                              "sparda_bank_wien",
                              "volksbank_gruppe",
                              "volkskreditbank_ag",
                              "vr_bank_braunau"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "fpx": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "affin_bank",
                              "agrobank",
                              "alliance_bank",
                              "ambank",
                              "bank_islam",
                              "bank_muamalat",
                              "bank_of_china",
                              "bank_rakyat",
                              "bsn",
                              "cimb",
                              "deutsche_bank",
                              "hong_leong_bank",
                              "hsbc",
                              "kfh",
                              "maybank2e",
                              "maybank2u",
                              "ocbc",
                              "pb_enterprise",
                              "public_bank",
                              "rhb",
                              "standard_chartered",
                              "uob"
                            ],
                            "maxLength": 5000,
                            "type": "string",
                            "x-stripeBypassValidation": true
                          }
                        },
                        "required": [
                          "bank"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "giropay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "grabpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "ideal": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "abn_amro",
                              "asn_bank",
                              "bunq",
                              "handelsbanken",
                              "ing",
                              "knab",
                              "moneyou",
                              "rabobank",
                              "regiobank",
                              "revolut",
                              "sns_bank",
                              "triodos_bank",
                              "van_lanschot"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "interac_present": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "klarna": {
                        "properties": {
                          "dob": {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth",
                            "type": "object"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "konbini": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "link": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "metadata": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "oxxo": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "p24": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "alior_bank",
                              "bank_millennium",
                              "bank_nowy_bfg_sa",
                              "bank_pekao_sa",
                              "banki_spbdzielcze",
                              "blik",
                              "bnp_paribas",
                              "boz",
                              "citi_handlowy",
                              "credit_agricole",
                              "envelobank",
                              "etransfer_pocztowy24",
                              "getin_bank",
                              "ideabank",
                              "ing",
                              "inteligo",
                              "mbank_mtransfer",
                              "nest_przelew",
                              "noble_pay",
                              "pbac_z_ipko",
                              "plus_bank",
                              "santander_przelew24",
                              "tmobile_usbugi_bankowe",
                              "toyota_bank",
                              "volkswagen_bank"
                            ],
                            "type": "string",
                            "x-stripeBypassValidation": true
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "paynow": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "pix": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "promptpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "radar_options": {
                        "properties": {
                          "session": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "radar_options",
                        "type": "object"
                      },
                      "sepa_debit": {
                        "properties": {
                          "iban": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "iban"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "sofort": {
                        "properties": {
                          "country": {
                            "enum": [
                              "AT",
                              "BE",
                              "DE",
                              "ES",
                              "IT",
                              "NL"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "country"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "acss_debit",
                          "affirm",
                          "afterpay_clearpay",
                          "alipay",
                          "au_becs_debit",
                          "bacs_debit",
                          "bancontact",
                          "blik",
                          "boleto",
                          "customer_balance",
                          "eps",
                          "fpx",
                          "giropay",
                          "grabpay",
                          "ideal",
                          "klarna",
                          "konbini",
                          "link",
                          "oxxo",
                          "p24",
                          "paynow",
                          "pix",
                          "promptpay",
                          "sepa_debit",
                          "sofort",
                          "us_bank_account",
                          "wechat_pay"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "us_bank_account": {
                        "properties": {
                          "account_holder_type": {
                            "enum": [
                              "company",
                              "individual"
                            ],
                            "type": "string"
                          },
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_type": {
                            "enum": [
                              "checking",
                              "savings"
                            ],
                            "type": "string"
                          },
                          "financial_connections_account": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "routing_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "payment_method_param",
                        "type": "object"
                      },
                      "wechat_pay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "payment_method_data_params",
                    "type": "object"
                  },
                  "payment_method_options": {
                    "description": "Payment-method-specific configuration for this PaymentIntent.",
                    "properties": {
                      "acss_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "mandate_options": {
                                "properties": {
                                  "custom_mandate_url": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "enum": [
                                          ""
                                        ],
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "interval_description": {
                                    "maxLength": 500,
                                    "type": "string"
                                  },
                                  "payment_schedule": {
                                    "enum": [
                                      "combined",
                                      "interval",
                                      "sporadic"
                                    ],
                                    "type": "string"
                                  },
                                  "transaction_type": {
                                    "enum": [
                                      "business",
                                      "personal"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "payment_intent_payment_method_options_mandate_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "verification_method": {
                                "enum": [
                                  "automatic",
                                  "instant",
                                  "microdeposits"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "affirm": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "afterpay_clearpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "reference": {
                                "maxLength": 128,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "alipay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "au_becs_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "bacs_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "bancontact": {
                        "anyOf": [
                          {
                            "properties": {
                              "preferred_language": {
                                "enum": [
                                  "de",
                                  "en",
                                  "fr",
                                  "nl"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "blik": {
                        "anyOf": [
                          {
                            "properties": {
                              "code": {
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "boleto": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_days": {
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "card": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "cvc_token": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "installments": {
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "plan": {
                                    "anyOf": [
                                      {
                                        "properties": {
                                          "count": {
                                            "type": "integer"
                                          },
                                          "interval": {
                                            "enum": [
                                              "month"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "fixed_count"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "count",
                                          "interval",
                                          "type"
                                        ],
                                        "title": "installment_plan",
                                        "type": "object"
                                      },
                                      {
                                        "enum": [
                                          ""
                                        ],
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                "title": "installments_param",
                                "type": "object"
                              },
                              "mandate_options": {
                                "properties": {
                                  "amount": {
                                    "type": "integer"
                                  },
                                  "amount_type": {
                                    "enum": [
                                      "fixed",
                                      "maximum"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "maxLength": 200,
                                    "type": "string"
                                  },
                                  "end_date": {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  "interval": {
                                    "enum": [
                                      "day",
                                      "month",
                                      "sporadic",
                                      "week",
                                      "year"
                                    ],
                                    "type": "string"
                                  },
                                  "interval_count": {
                                    "type": "integer"
                                  },
                                  "reference": {
                                    "maxLength": 80,
                                    "type": "string"
                                  },
                                  "start_date": {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  "supported_types": {
                                    "items": {
                                      "enum": [
                                        "india"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "amount_type",
                                  "interval",
                                  "reference",
                                  "start_date"
                                ],
                                "title": "mandate_options_param",
                                "type": "object"
                              },
                              "network": {
                                "enum": [
                                  "amex",
                                  "cartes_bancaires",
                                  "diners",
                                  "discover",
                                  "interac",
                                  "jcb",
                                  "mastercard",
                                  "unionpay",
                                  "unknown",
                                  "visa"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "request_three_d_secure": {
                                "enum": [
                                  "any",
                                  "automatic"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "statement_descriptor_suffix_kana": {
                                "anyOf": [
                                  {
                                    "maxLength": 22,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "statement_descriptor_suffix_kanji": {
                                "anyOf": [
                                  {
                                    "maxLength": 17,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "payment_intent_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "card_present": {
                        "anyOf": [
                          {
                            "properties": {
                              "request_extended_authorization": {
                                "type": "boolean"
                              },
                              "request_incremental_authorization_support": {
                                "type": "boolean"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "customer_balance": {
                        "anyOf": [
                          {
                            "properties": {
                              "bank_transfer": {
                                "properties": {
                                  "eu_bank_transfer": {
                                    "properties": {
                                      "country": {
                                        "maxLength": 5000,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "country"
                                    ],
                                    "title": "eu_bank_transfer_params",
                                    "type": "object"
                                  },
                                  "requested_address_types": {
                                    "items": {
                                      "enum": [
                                        "iban",
                                        "sepa",
                                        "sort_code",
                                        "spei",
                                        "zengin"
                                      ],
                                      "type": "string",
                                      "x-stripeBypassValidation": true
                                    },
                                    "type": "array"
                                  },
                                  "type": {
                                    "enum": [
                                      "eu_bank_transfer",
                                      "gb_bank_transfer",
                                      "jp_bank_transfer",
                                      "mx_bank_transfer"
                                    ],
                                    "type": "string",
                                    "x-stripeBypassValidation": true
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "bank_transfer_param",
                                "type": "object"
                              },
                              "funding_type": {
                                "enum": [
                                  "bank_transfer"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "eps": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "fpx": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "giropay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "grabpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "ideal": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "interac_present": {
                        "anyOf": [
                          {
                            "properties": {
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "klarna": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "preferred_locale": {
                                "enum": [
                                  "cs-CZ",
                                  "da-DK",
                                  "de-AT",
                                  "de-CH",
                                  "de-DE",
                                  "el-GR",
                                  "en-AT",
                                  "en-AU",
                                  "en-BE",
                                  "en-CA",
                                  "en-CH",
                                  "en-CZ",
                                  "en-DE",
                                  "en-DK",
                                  "en-ES",
                                  "en-FI",
                                  "en-FR",
                                  "en-GB",
                                  "en-GR",
                                  "en-IE",
                                  "en-IT",
                                  "en-NL",
                                  "en-NO",
                                  "en-NZ",
                                  "en-PL",
                                  "en-PT",
                                  "en-SE",
                                  "en-US",
                                  "es-ES",
                                  "es-US",
                                  "fi-FI",
                                  "fr-BE",
                                  "fr-CA",
                                  "fr-CH",
                                  "fr-FR",
                                  "it-CH",
                                  "it-IT",
                                  "nb-NO",
                                  "nl-BE",
                                  "nl-NL",
                                  "pl-PL",
                                  "pt-PT",
                                  "sv-FI",
                                  "sv-SE"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "konbini": {
                        "anyOf": [
                          {
                            "properties": {
                              "confirmation_number": {
                                "maxLength": 11,
                                "type": "string"
                              },
                              "expires_after_days": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "expires_at": {
                                "anyOf": [
                                  {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "product_description": {
                                "maxLength": 22,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "link": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "persistent_token": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "oxxo": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_days": {
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "p24": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              },
                              "tos_shown_and_accepted": {
                                "type": "boolean"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "paynow": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "pix": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_seconds": {
                                "type": "integer"
                              },
                              "expires_at": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "promptpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "sepa_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "mandate_options": {
                                "properties": {
                                },
                                "title": "payment_method_options_mandate_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "sofort": {
                        "anyOf": [
                          {
                            "properties": {
                              "preferred_language": {
                                "enum": [
                                  "",
                                  "de",
                                  "en",
                                  "es",
                                  "fr",
                                  "it",
                                  "nl",
                                  "pl"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "us_bank_account": {
                        "anyOf": [
                          {
                            "properties": {
                              "financial_connections": {
                                "properties": {
                                  "permissions": {
                                    "items": {
                                      "enum": [
                                        "balances",
                                        "ownership",
                                        "payment_method",
                                        "transactions"
                                      ],
                                      "maxLength": 5000,
                                      "type": "string",
                                      "x-stripeBypassValidation": true
                                    },
                                    "type": "array"
                                  },
                                  "return_url": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "title": "linked_account_options_param",
                                "type": "object"
                              },
                              "networks": {
                                "properties": {
                                  "requested": {
                                    "items": {
                                      "enum": [
                                        "ach",
                                        "us_domestic_wire"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "networks_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "verification_method": {
                                "enum": [
                                  "automatic",
                                  "instant",
                                  "microdeposits"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "wechat_pay": {
                        "anyOf": [
                          {
                            "properties": {
                              "app_id": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "client": {
                                "enum": [
                                  "android",
                                  "ios",
                                  "web"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "client"
                            ],
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "title": "payment_method_options_param",
                    "type": "object"
                  },
                  "payment_method_types": {
                    "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. If this is not provided, defaults to [\"card\"]. Use automatic_payment_methods to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "radar_options": {
                    "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
                    "properties": {
                      "session": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "radar_options",
                    "type": "object"
                  },
                  "receipt_email": {
                    "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
                    "type": "string"
                  },
                  "return_url": {
                    "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
                    "type": "string"
                  },
                  "setup_future_usage": {
                    "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
                    "enum": [
                      "off_session",
                      "on_session"
                    ],
                    "type": "string"
                  },
                  "shipping": {
                    "description": "Shipping information for this PaymentIntent.",
                    "properties": {
                      "address": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "optional_fields_address",
                        "type": "object"
                      },
                      "carrier": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "phone": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tracking_number": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "required": [
                      "address",
                      "name"
                    ],
                    "title": "optional_fields_shipping",
                    "type": "object"
                  },
                  "statement_descriptor": {
                    "description": "For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.",
                    "maxLength": 22,
                    "type": "string"
                  },
                  "statement_descriptor_suffix": {
                    "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
                    "maxLength": 22,
                    "type": "string"
                  },
                  "transfer_data": {
                    "description": "The parameters used to automatically create a Transfer when the payment succeeds.\nFor more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
                    "properties": {
                      "amount": {
                        "type": "integer"
                      },
                      "destination": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "destination"
                    ],
                    "title": "transfer_data_creation_params",
                    "type": "object"
                  },
                  "transfer_group": {
                    "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
                    "type": "string"
                  },
                  "use_stripe_sdk": {
                    "description": "Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "amount",
                  "currency"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_intent"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/payment_intents/{intent}/confirm": {
      "post": {
        "description": "<p>Confirm that your customer intends to pay with current or provided\npayment method. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.\nIf the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If payment fails,\nthe PaymentIntent will transition to the <code>requires_payment_method</code> status. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).\nIf the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted\nusing our <a href=\"/docs/stripe-js/reference#stripe-handle-card-payment\">client SDKs</a>\nand the PaymentIntent’s <a href=\"#payment_intent_object-client_secret\">client_secret</a>.\nAfter <code>next_action</code>s are handled by the client, no additional\nconfirmation is required to complete the payment.\nIf the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be\ninitiated using a secret key.\nIf any actions are required for the payment, the PaymentIntent will\nreturn to the <code>requires_confirmation</code> state\nafter those actions are completed. Your server needs to then\nexplicitly re-confirm the PaymentIntent to initiate the next payment\nattempt. Read the <a href=\"/docs/payments/payment-intents/web-manual\">expanded documentation</a>\nto learn more about manual confirmation.</p>",
        "operationId": "PostPaymentIntentsIntentConfirm",
        "parameters": [
          {
            "in": "path",
            "name": "intent",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "mandate_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "off_session": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_method_types": {
                  "explode": true,
                  "style": "deepObject"
                },
                "radar_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "receipt_email": {
                  "explode": true,
                  "style": "deepObject"
                },
                "shipping": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "capture_method": {
                    "description": "Controls when the funds will be captured from the customer's account.",
                    "enum": [
                      "automatic",
                      "manual"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "client_secret": {
                    "description": "The client secret of the PaymentIntent.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "error_on_requires_action": {
                    "description": "Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication).",
                    "type": "boolean"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mandate": {
                    "description": "ID of the mandate to be used for this payment.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "mandate_data": {
                    "anyOf": [
                      {
                        "properties": {
                          "customer_acceptance": {
                            "properties": {
                              "accepted_at": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "offline": {
                                "properties": {
                                },
                                "title": "offline_param",
                                "type": "object"
                              },
                              "online": {
                                "properties": {
                                  "ip_address": {
                                    "type": "string"
                                  },
                                  "user_agent": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "ip_address",
                                  "user_agent"
                                ],
                                "title": "online_param",
                                "type": "object"
                              },
                              "type": {
                                "enum": [
                                  "offline",
                                  "online"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "customer_acceptance_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "customer_acceptance"
                        ],
                        "title": "secret_key_param",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "customer_acceptance": {
                            "properties": {
                              "online": {
                                "properties": {
                                  "ip_address": {
                                    "type": "string"
                                  },
                                  "user_agent": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "title": "online_param",
                                "type": "object"
                              },
                              "type": {
                                "enum": [
                                  "online"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "required": [
                              "online",
                              "type"
                            ],
                            "title": "customer_acceptance_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "customer_acceptance"
                        ],
                        "title": "client_key_param",
                        "type": "object"
                      }
                    ],
                    "description": "This hash contains details about the Mandate to create"
                  },
                  "off_session": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "enum": [
                          "one_off",
                          "recurring"
                        ],
                        "maxLength": 5000,
                        "type": "string"
                      }
                    ],
                    "description": "Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards)."
                  },
                  "payment_method": {
                    "description": "ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "payment_method_data": {
                    "description": "If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\nin the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\nproperty on the PaymentIntent.",
                    "properties": {
                      "acss_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "institution_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "transit_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "institution_number",
                          "transit_number"
                        ],
                        "title": "payment_method_param",
                        "type": "object"
                      },
                      "affirm": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "afterpay_clearpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "alipay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "au_becs_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "bsb_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "bsb_number"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "bacs_debit": {
                        "properties": {
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "sort_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "bancontact": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "billing_details": {
                        "properties": {
                          "address": {
                            "anyOf": [
                              {
                                "properties": {
                                  "city": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "country": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "line1": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "line2": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "postal_code": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  "state": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "title": "billing_details_address",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "email": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "billing_details_inner_params",
                        "type": "object"
                      },
                      "blik": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "boleto": {
                        "properties": {
                          "tax_id": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "tax_id"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "customer_balance": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "eps": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "arzte_und_apotheker_bank",
                              "austrian_anadi_bank_ag",
                              "bank_austria",
                              "bankhaus_carl_spangler",
                              "bankhaus_schelhammer_und_schattera_ag",
                              "bawag_psk_ag",
                              "bks_bank_ag",
                              "brull_kallmus_bank_ag",
                              "btv_vier_lander_bank",
                              "capital_bank_grawe_gruppe_ag",
                              "deutsche_bank_ag",
                              "dolomitenbank",
                              "easybank_ag",
                              "erste_bank_und_sparkassen",
                              "hypo_alpeadriabank_international_ag",
                              "hypo_bank_burgenland_aktiengesellschaft",
                              "hypo_noe_lb_fur_niederosterreich_u_wien",
                              "hypo_oberosterreich_salzburg_steiermark",
                              "hypo_tirol_bank_ag",
                              "hypo_vorarlberg_bank_ag",
                              "marchfelder_bank",
                              "oberbank_ag",
                              "raiffeisen_bankengruppe_osterreich",
                              "schoellerbank_ag",
                              "sparda_bank_wien",
                              "volksbank_gruppe",
                              "volkskreditbank_ag",
                              "vr_bank_braunau"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "fpx": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "affin_bank",
                              "agrobank",
                              "alliance_bank",
                              "ambank",
                              "bank_islam",
                              "bank_muamalat",
                              "bank_of_china",
                              "bank_rakyat",
                              "bsn",
                              "cimb",
                              "deutsche_bank",
                              "hong_leong_bank",
                              "hsbc",
                              "kfh",
                              "maybank2e",
                              "maybank2u",
                              "ocbc",
                              "pb_enterprise",
                              "public_bank",
                              "rhb",
                              "standard_chartered",
                              "uob"
                            ],
                            "maxLength": 5000,
                            "type": "string",
                            "x-stripeBypassValidation": true
                          }
                        },
                        "required": [
                          "bank"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "giropay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "grabpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "ideal": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "abn_amro",
                              "asn_bank",
                              "bunq",
                              "handelsbanken",
                              "ing",
                              "knab",
                              "moneyou",
                              "rabobank",
                              "regiobank",
                              "revolut",
                              "sns_bank",
                              "triodos_bank",
                              "van_lanschot"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "interac_present": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "klarna": {
                        "properties": {
                          "dob": {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth",
                            "type": "object"
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "konbini": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "link": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "metadata": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "oxxo": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "p24": {
                        "properties": {
                          "bank": {
                            "enum": [
                              "alior_bank",
                              "bank_millennium",
                              "bank_nowy_bfg_sa",
                              "bank_pekao_sa",
                              "banki_spbdzielcze",
                              "blik",
                              "bnp_paribas",
                              "boz",
                              "citi_handlowy",
                              "credit_agricole",
                              "envelobank",
                              "etransfer_pocztowy24",
                              "getin_bank",
                              "ideabank",
                              "ing",
                              "inteligo",
                              "mbank_mtransfer",
                              "nest_przelew",
                              "noble_pay",
                              "pbac_z_ipko",
                              "plus_bank",
                              "santander_przelew24",
                              "tmobile_usbugi_bankowe",
                              "toyota_bank",
                              "volkswagen_bank"
                            ],
                            "type": "string",
                            "x-stripeBypassValidation": true
                          }
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "paynow": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "pix": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "promptpay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      },
                      "radar_options": {
                        "properties": {
                          "session": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "radar_options",
                        "type": "object"
                      },
                      "sepa_debit": {
                        "properties": {
                          "iban": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "iban"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "sofort": {
                        "properties": {
                          "country": {
                            "enum": [
                              "AT",
                              "BE",
                              "DE",
                              "ES",
                              "IT",
                              "NL"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "country"
                        ],
                        "title": "param",
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "acss_debit",
                          "affirm",
                          "afterpay_clearpay",
                          "alipay",
                          "au_becs_debit",
                          "bacs_debit",
                          "bancontact",
                          "blik",
                          "boleto",
                          "customer_balance",
                          "eps",
                          "fpx",
                          "giropay",
                          "grabpay",
                          "ideal",
                          "klarna",
                          "konbini",
                          "link",
                          "oxxo",
                          "p24",
                          "paynow",
                          "pix",
                          "promptpay",
                          "sepa_debit",
                          "sofort",
                          "us_bank_account",
                          "wechat_pay"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "us_bank_account": {
                        "properties": {
                          "account_holder_type": {
                            "enum": [
                              "company",
                              "individual"
                            ],
                            "type": "string"
                          },
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_type": {
                            "enum": [
                              "checking",
                              "savings"
                            ],
                            "type": "string"
                          },
                          "financial_connections_account": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "routing_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "payment_method_param",
                        "type": "object"
                      },
                      "wechat_pay": {
                        "properties": {
                        },
                        "title": "param",
                        "type": "object"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "payment_method_data_params",
                    "type": "object"
                  },
                  "payment_method_options": {
                    "description": "Payment-method-specific configuration for this PaymentIntent.",
                    "properties": {
                      "acss_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "mandate_options": {
                                "properties": {
                                  "custom_mandate_url": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "enum": [
                                          ""
                                        ],
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "interval_description": {
                                    "maxLength": 500,
                                    "type": "string"
                                  },
                                  "payment_schedule": {
                                    "enum": [
                                      "combined",
                                      "interval",
                                      "sporadic"
                                    ],
                                    "type": "string"
                                  },
                                  "transaction_type": {
                                    "enum": [
                                      "business",
                                      "personal"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "payment_intent_payment_method_options_mandate_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "verification_method": {
                                "enum": [
                                  "automatic",
                                  "instant",
                                  "microdeposits"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "affirm": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "afterpay_clearpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "reference": {
                                "maxLength": 128,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "alipay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "au_becs_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "bacs_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "bancontact": {
                        "anyOf": [
                          {
                            "properties": {
                              "preferred_language": {
                                "enum": [
                                  "de",
                                  "en",
                                  "fr",
                                  "nl"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "blik": {
                        "anyOf": [
                          {
                            "properties": {
                              "code": {
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "boleto": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_days": {
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "card": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "cvc_token": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "installments": {
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "plan": {
                                    "anyOf": [
                                      {
                                        "properties": {
                                          "count": {
                                            "type": "integer"
                                          },
                                          "interval": {
                                            "enum": [
                                              "month"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "fixed_count"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "count",
                                          "interval",
                                          "type"
                                        ],
                                        "title": "installment_plan",
                                        "type": "object"
                                      },
                                      {
                                        "enum": [
                                          ""
                                        ],
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                "title": "installments_param",
                                "type": "object"
                              },
                              "mandate_options": {
                                "properties": {
                                  "amount": {
                                    "type": "integer"
                                  },
                                  "amount_type": {
                                    "enum": [
                                      "fixed",
                                      "maximum"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "maxLength": 200,
                                    "type": "string"
                                  },
                                  "end_date": {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  "interval": {
                                    "enum": [
                                      "day",
                                      "month",
                                      "sporadic",
                                      "week",
                                      "year"
                                    ],
                                    "type": "string"
                                  },
                                  "interval_count": {
                                    "type": "integer"
                                  },
                                  "reference": {
                                    "maxLength": 80,
                                    "type": "string"
                                  },
                                  "start_date": {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  "supported_types": {
                                    "items": {
                                      "enum": [
                                        "india"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "amount_type",
                                  "interval",
                                  "reference",
                                  "start_date"
                                ],
                                "title": "mandate_options_param",
                                "type": "object"
                              },
                              "network": {
                                "enum": [
                                  "amex",
                                  "cartes_bancaires",
                                  "diners",
                                  "discover",
                                  "interac",
                                  "jcb",
                                  "mastercard",
                                  "unionpay",
                                  "unknown",
                                  "visa"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "request_three_d_secure": {
                                "enum": [
                                  "any",
                                  "automatic"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "statement_descriptor_suffix_kana": {
                                "anyOf": [
                                  {
                                    "maxLength": 22,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "statement_descriptor_suffix_kanji": {
                                "anyOf": [
                                  {
                                    "maxLength": 17,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "payment_intent_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "card_present": {
                        "anyOf": [
                          {
                            "properties": {
                              "request_extended_authorization": {
                                "type": "boolean"
                              },
                              "request_incremental_authorization_support": {
                                "type": "boolean"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "customer_balance": {
                        "anyOf": [
                          {
                            "properties": {
                              "bank_transfer": {
                                "properties": {
                                  "eu_bank_transfer": {
                                    "properties": {
                                      "country": {
                                        "maxLength": 5000,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "country"
                                    ],
                                    "title": "eu_bank_transfer_params",
                                    "type": "object"
                                  },
                                  "requested_address_types": {
                                    "items": {
                                      "enum": [
                                        "iban",
                                        "sepa",
                                        "sort_code",
                                        "spei",
                                        "zengin"
                                      ],
                                      "type": "string",
                                      "x-stripeBypassValidation": true
                                    },
                                    "type": "array"
                                  },
                                  "type": {
                                    "enum": [
                                      "eu_bank_transfer",
                                      "gb_bank_transfer",
                                      "jp_bank_transfer",
                                      "mx_bank_transfer"
                                    ],
                                    "type": "string",
                                    "x-stripeBypassValidation": true
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "bank_transfer_param",
                                "type": "object"
                              },
                              "funding_type": {
                                "enum": [
                                  "bank_transfer"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "eps": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "fpx": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "giropay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "grabpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "ideal": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "interac_present": {
                        "anyOf": [
                          {
                            "properties": {
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "klarna": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "preferred_locale": {
                                "enum": [
                                  "cs-CZ",
                                  "da-DK",
                                  "de-AT",
                                  "de-CH",
                                  "de-DE",
                                  "el-GR",
                                  "en-AT",
                                  "en-AU",
                                  "en-BE",
                                  "en-CA",
                                  "en-CH",
                                  "en-CZ",
                                  "en-DE",
                                  "en-DK",
                                  "en-ES",
                                  "en-FI",
                                  "en-FR",
                                  "en-GB",
                                  "en-GR",
                                  "en-IE",
                                  "en-IT",
                                  "en-NL",
                                  "en-NO",
                                  "en-NZ",
                                  "en-PL",
                                  "en-PT",
                                  "en-SE",
                                  "en-US",
                                  "es-ES",
                                  "es-US",
                                  "fi-FI",
                                  "fr-BE",
                                  "fr-CA",
                                  "fr-CH",
                                  "fr-FR",
                                  "it-CH",
                                  "it-IT",
                                  "nb-NO",
                                  "nl-BE",
                                  "nl-NL",
                                  "pl-PL",
                                  "pt-PT",
                                  "sv-FI",
                                  "sv-SE"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "konbini": {
                        "anyOf": [
                          {
                            "properties": {
                              "confirmation_number": {
                                "maxLength": 11,
                                "type": "string"
                              },
                              "expires_after_days": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "expires_at": {
                                "anyOf": [
                                  {
                                    "format": "unix-time",
                                    "type": "integer"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              },
                              "product_description": {
                                "maxLength": 22,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "link": {
                        "anyOf": [
                          {
                            "properties": {
                              "capture_method": {
                                "enum": [
                                  "",
                                  "manual"
                                ],
                                "type": "string"
                              },
                              "persistent_token": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "oxxo": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_days": {
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "p24": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              },
                              "tos_shown_and_accepted": {
                                "type": "boolean"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "paynow": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "pix": {
                        "anyOf": [
                          {
                            "properties": {
                              "expires_after_seconds": {
                                "type": "integer"
                              },
                              "expires_at": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "promptpay": {
                        "anyOf": [
                          {
                            "properties": {
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "sepa_debit": {
                        "anyOf": [
                          {
                            "properties": {
                              "mandate_options": {
                                "properties": {
                                },
                                "title": "payment_method_options_mandate_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "sofort": {
                        "anyOf": [
                          {
                            "properties": {
                              "preferred_language": {
                                "enum": [
                                  "",
                                  "de",
                                  "en",
                                  "es",
                                  "fr",
                                  "it",
                                  "nl",
                                  "pl"
                                ],
                                "type": "string"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "us_bank_account": {
                        "anyOf": [
                          {
                            "properties": {
                              "financial_connections": {
                                "properties": {
                                  "permissions": {
                                    "items": {
                                      "enum": [
                                        "balances",
                                        "ownership",
                                        "payment_method",
                                        "transactions"
                                      ],
                                      "maxLength": 5000,
                                      "type": "string",
                                      "x-stripeBypassValidation": true
                                    },
                                    "type": "array"
                                  },
                                  "return_url": {
                                    "maxLength": 5000,
                                    "type": "string"
                                  }
                                },
                                "title": "linked_account_options_param",
                                "type": "object"
                              },
                              "networks": {
                                "properties": {
                                  "requested": {
                                    "items": {
                                      "enum": [
                                        "ach",
                                        "us_domestic_wire"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "networks_options_param",
                                "type": "object"
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "",
                                  "none",
                                  "off_session",
                                  "on_session"
                                ],
                                "type": "string"
                              },
                              "verification_method": {
                                "enum": [
                                  "automatic",
                                  "instant",
                                  "microdeposits"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              }
                            },
                            "title": "payment_intent_payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "wechat_pay": {
                        "anyOf": [
                          {
                            "properties": {
                              "app_id": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "client": {
                                "enum": [
                                  "android",
                                  "ios",
                                  "web"
                                ],
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "setup_future_usage": {
                                "enum": [
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "client"
                            ],
                            "title": "payment_method_options_param",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "title": "payment_method_options_param",
                    "type": "object"
                  },
                  "payment_method_types": {
                    "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. Use automatic_payment_methods to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "radar_options": {
                    "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
                    "properties": {
                      "session": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "radar_options",
                    "type": "object"
                  },
                  "receipt_email": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails)."
                  },
                  "return_url": {
                    "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.\nIf you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.\nThis parameter is only used for cards and other redirect-based payment methods.",
                    "type": "string"
                  },
                  "setup_future_usage": {
                    "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n\nIf `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.",
                    "enum": [
                      "",
                      "off_session",
                      "on_session"
                    ],
                    "type": "string"
                  },
                  "shipping": {
                    "anyOf": [
                      {
                        "properties": {
                          "address": {
                            "properties": {
                              "city": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "country": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "line1": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "line2": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "postal_code": {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "state": {
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "optional_fields_address",
                            "type": "object"
                          },
                          "carrier": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "tracking_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "name"
                        ],
                        "title": "optional_fields_shipping",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Shipping information for this PaymentIntent."
                  },
                  "use_stripe_sdk": {
                    "description": "Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_intent"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ]
}